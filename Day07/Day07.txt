

1. 批量修改文件名后复制文件

	重点注意:
	翻车点:
		当以二进制模式打开文件进行文件操作时.
		read 函数最终读取文件内容为空时,返回的结果为 b'' 
		表示是一个二进制的空字符串
		在 Python2.7版本中. '' == b''  结果为True
		在 Python3.6版本中. '' == b''  结果为False



2. 面向对象概述

3. 面向对象生活举例

	类: 是对现实事物的属性和行为的抽象

		类不能具体的表示一个真实存在的事物.

	对象: 是类的一种实例表示
		 是真实存在的,看得见摸得到的


4. 类与对象的关系
	类(Class) 由3个部分构成

		类的名称:类名
		类的属性:一组数据
		类的方法:允许对进行操作的方法 (行为)
5. 类的定义格式
	经典类:
	class 类名:
		属性
		行为

	新式类:
	class 类名(object):
		属性
		行为

	在 python3 以后,只有新式类

	
6. 创建对象和使用对象的格式

	对象名 = 类名(参数列表....)

	对象调用方法的格式:
	对象名.方法名(参数列表)
	注意:
		方法中参数列表中的第一个参数self,不需要手动传递,这个参数是由解释器在执行程序时,自动传递的
		默认会将当前调用方法的对象引用传递进去



7. 创建多个对象
   问：如果通过同一个类，创建多次对象时，多次创建的对象是否是同一个？
   答：否,创建的是多个类型相同,但地址不同的多个对象
   
   
8. 动态绑定属性
	在实例对象以后,为该对象添加一个属性
	
	
9. __init__ 方法
   这个方法是一个魔法方法, 命名规则是前后各有两个下划线,
   魔法方法是python当中,预设好的,具有特定功能的方法
   一般这种方法,不需要手动调用,会自动调用执行
   
   该方法会在创建对象的时候自动调用.
   调用时,这个方法用来为对象进行初始化
   
   
10. __str__ 方法和 __del__ 方法

	__str__ 方法(重点掌握)
		格式化对象
		该方法返回一个字符串值
		当使用 str() 做类型转换时,会自动调用 该方法
		
		
		

	当一个自定义类,没有实现该方法时,默认打印格式是 <模块名.类名 object at 地址>  
	eg:<__main__.Cat object at 0x02176610>

	name,age
	{name:tom, age:1}


	调用该方法的场景:
		1. 通过 print() 函数打印时,会自动调用该方法
		2. 通过 str() 函数对自定义的对象进行类型转换时,会自动调用该方法


	__del__ 方法(了解)
	该方法是用来在销毁对象时,回收释放资源使用的方法
	该方法也是自动调用
	当在使用 del 对象时,会调用方法







